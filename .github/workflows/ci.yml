name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - CONTEXT: .
            TAGS:
              - wiremock/wiremock:test
          - CONTEXT: alpine
            TAGS:
              - wiremock/wiremock:test-alpine
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout sources
        uses: actions/checkout@main

# TODO: Re-enable if rate limit becomes an issues
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: wiremock
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Wiremock Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.versions.CONTEXT }}
          load: true
          file: ${{ matrix.versions.CONTEXT }}/Dockerfile
          tags: ${{ matrix.versions.TAGS[0] }}

      - name: Build Wiremock Docker image
        run: docker buildx build --tag ${{ matrix.versions.TAGS[0] }} --load ${{ matrix.versions.CONTEXT }} --file ${{ matrix.versions.CONTEXT }}/Dockerfile

      - name: Test Wiremock Docker image
        run: |
          # default
          docker container run -d --name test -p 8080:8080 ${{ matrix.versions.TAGS[0] }}
          timeout 10 bash -c 'while ! curl --fail http://localhost:8080/__admin/; do sleep 1; done'
          docker container rm -f test

          # args
          docker container run -d --name test -p 8443:8443 ${{ matrix.versions.TAGS[0] }} --https-port 8443
          timeout 10 bash -c 'while ! curl --fail --insecure https://localhost:8443/__admin/; do sleep 1; done'
          docker container rm -f test

          if [ "${{ matrix.versions.CONTEXT }}" != "alpine" ]
          then
            # helloworld
            docker buildx build --tag wiremock-hello --load samples/hello --file samples/hello/Dockerfile-nightly
            docker container run -d --name test -p 8080:8080 wiremock-hello
            timeout 10 bash -c 'while ! curl --fail http://localhost:8080/hello; do sleep 1; done'
            docker container rm -f test

            # random
            docker buildx build --tag wiremock-random --load samples/random --file samples/random/Dockerfile-nightly
            docker container run -d --name test -p 8080:8080 wiremock-random
            timeout 10 bash -c 'while ! curl --fail http://localhost:8080/random; do sleep 1; done'
            docker container rm -f test
          fi
